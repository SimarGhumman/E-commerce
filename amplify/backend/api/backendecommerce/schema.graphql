type User @model @auth(rules: [{ allow: private }]) {
  id: ID!
  username: String
  email: String
  password: String
  CartItems: [CartItem] @hasMany(indexName: "byUser", fields: ["id"])
  Orders: [Order] @hasMany(indexName: "byUser", fields: ["id"])
  shippingAddress: String
  billingAddress: String
}

type Order @model @auth(rules: [{ allow: private }]) {
  id: ID!
  date: AWSDateTime
  totalPrice: Float
  userID: ID! @index(name: "byUser")
  OrderItems: [OrderItem] @hasMany(indexName: "byOrder", fields: ["id"])
}

type OrderItem @model @auth(rules: [{ allow: private }]) {
  id: ID!
  name: String
  price: Float
  quantity: Int
  Image: Image @hasOne
  orderID: ID! @index(name: "byOrder")
}

type CartItem @model @auth(rules: [{ allow: private }]) {
  id: ID!
  Product: Product @hasOne
  quantity: Int
  userID: ID! @index(name: "byUser")
}

type Product @model @auth(rules: [{ allow: private }]) {
  id: ID!
  name: String
  description: String
  Image: Image @hasOne
  price: Float
}

type Image @model @auth(rules: [{ allow: private }]) {
  id: ID!
  url: AWSURL
  description: String
}

type Note @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  description: String
  image: String
}

